package fm.mrc.resumebuilder.data.pdf

import androidx.compose.ui.graphics.Color

/**
 * PDF customization options
 */
data class PdfCustomization(
    val pageSize: PageSize = PageSize.A4,
    val orientation: PageOrientation = PageOrientation.PORTRAIT,
    val margins: Margins = Margins(),
    val fontSettings: FontSettings = FontSettings(),
    val colorScheme: PdfColorScheme = PdfColorScheme(),
    val headerFooter: HeaderFooterSettings = HeaderFooterSettings(),
    val watermark: WatermarkSettings = WatermarkSettings(),
    val compression: CompressionSettings = CompressionSettings()
)

/**
 * Page sizes
 */
enum class PageSize(val width: Float, val height: Float) {
    A4(595f, 842f),
    A3(842f, 1191f),
    LETTER(612f, 792f),
    LEGAL(612f, 1008f)
}

/**
 * Page orientation
 */
enum class PageOrientation {
    PORTRAIT,
    LANDSCAPE
}

/**
 * Margin settings
 */
data class Margins(
    val top: Float = 50f,
    val bottom: Float = 50f,
    val left: Float = 50f,
    val right: Float = 50f
)

/**
 * Font settings
 */
data class FontSettings(
    val primaryFont: String = "Roboto",
    val secondaryFont: String = "Roboto",
    val titleSize: Float = 24f,
    val subtitleSize: Float = 18f,
    val sectionHeaderSize: Float = 16f,
    val bodySize: Float = 12f,
    val smallSize: Float = 10f,
    val lineSpacing: Float = 1.4f
)

/**
 * PDF color scheme
 */
data class PdfColorScheme(
    val primaryColor: Color = Color(0xFF2196F3),
    val secondaryColor: Color = Color(0xFF1976D2),
    val textColor: Color = Color(0xFF212121),
    val lightTextColor: Color = Color(0xFF424242),
    val backgroundColor: Color = Color(0xFFFFFFFF),
    val accentColor: Color = Color(0xFF4CAF50)
)

/**
 * Header and footer settings
 */
data class HeaderFooterSettings(
    val showHeader: Boolean = false,
    val showFooter: Boolean = true,
    val headerText: String = "",
    val footerText: String = "Generated by Resume Builder",
    val pageNumbers: Boolean = true,
    val dateStamp: Boolean = true
)

/**
 * Watermark settings
 */
data class WatermarkSettings(
    val enabled: Boolean = false,
    val text: String = "DRAFT",
    val opacity: Float = 0.1f,
    val rotation: Float = -45f,
    val fontSize: Float = 48f
)

/**
 * Compression settings
 */
data class CompressionSettings(
    val enabled: Boolean = true,
    val quality: Int = 85, // 0-100
    val imageCompression: Boolean = true,
    val imageQuality: Int = 80 // 0-100
)
